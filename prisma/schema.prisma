// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    extensions = [vector]
}

model User {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    firstName String?
    lastName  String?   
    imageUrl String?

    emailAddress     String   @unique
    credits   Int      @default(150)   

    userToProjects UserToProject[]
    
    questionsAsked      Question[]
}

model Project {
    id       String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name      String
    githubUrl String?

    deletedAt DateTime?

    userToProjects UserToProject[]
 

    Commit Commit[]
    sourceCodeEmbeddings SourceCodeEmbedding[]

    savedQuestions  Question[]


}

model UserToProject {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userId    String
    projectId String

    user      User     @relation(fields: [userId], references: [id])
    project   Project  @relation(fields: [projectId], references: [id])

    @@unique([userId, projectId])
}

model SourceCodeEmbedding {
    id       String   @id @default(cuid())

    summaryEmbedding Unsupported("vector(768)")?

    fileName String
    sourceCode String
    summary String

    projectId String

    project   Project  @relation(fields: [projectId], references: [id])


    // vector embedding
}


model Commit {
    id       String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    projectId String

    project   Project  @relation(fields: [projectId], references: [id])
    
    commitMessage String
    commitHash String
    commitDate DateTime
    commitAuthorName String
    commitAuthorAvatar String

    //ai summary
    summary String
    }

    model Question {
        id   String @id @default(cuid())
        createdAt  DateTime @default(now())
        updatedAt  DateTime @updatedAt

        question  String
        answer    String

        filesReferences  Json?

        projectId   String

        project   Project  @relation(fields: [projectId],references: [id])

        userId    String
        user      User     @relation(fields: [userId],references: [id])

    }